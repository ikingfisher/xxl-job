apiVersion: apps/v1
kind: Deployment
metadata:
  name: xxl-job-admin
  labels:
    app: xxl-job-admin
spec:
  replicas: 0
  selector:
    matchLabels:
      app: xxl-job-admin
  template:
    metadata:
      name: xxl-job-admin
      labels:
        app: xxl-job-admin
    spec:
      containers:
        - name: xxl-job-admin
          command: ["java", "-jar", "/app/xxl-job-admin-3.0.1-SNAPSHOT.jar", "--spring.config.location=/etc/config/"]
          image: xxl-job-admin:latest
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: xxl-job-admin
              mountPath: "/etc/config"
              readOnly: true
          ports:
            - containerPort: 8080
              protocol: TCP
      restartPolicy: Always
      volumes:
        - name: xxl-job-admin
          configMap:
            name: xxl-job-admin
---
apiVersion: v1
kind: Service
metadata:
  name: xxl-job-admin
spec:
  ports:
    - port: 8080
  selector:
    app: xxl-job-admin
  clusterIP: None

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: xxl-job-admin
data:
  application.properties: |
    server.port=8080
    server.servlet.context-path=/xxl-job-admin
    
    ### actuator
    management.server.base-path=/actuator
    management.health.mail.enabled=false
    
    ### resources
    spring.mvc.servlet.load-on-startup=0
    spring.mvc.static-path-pattern=/static/**
    spring.web.resources.static-locations=classpath:/static/
    
    ### freemarker
    spring.freemarker.templateLoaderPath=classpath:/templates/
    spring.freemarker.suffix=.ftl
    spring.freemarker.charset=UTF-8
    spring.freemarker.request-context-attribute=request
    spring.freemarker.settings.number_format=0.##########
    spring.freemarker.settings.new_builtin_class_resolver=safer
    
    ### mybatis
    mybatis.mapper-locations=classpath:/mybatis-mapper/*Mapper.xml
    
    ### datasource-pool
    spring.datasource.type=com.zaxxer.hikari.HikariDataSource
    spring.datasource.hikari.minimum-idle=10
    spring.datasource.hikari.maximum-pool-size=30
    spring.datasource.hikari.auto-commit=true
    spring.datasource.hikari.idle-timeout=30000
    spring.datasource.hikari.pool-name=HikariCP
    spring.datasource.hikari.max-lifetime=900000
    spring.datasource.hikari.connection-timeout=10000
    spring.datasource.hikari.connection-test-query=SELECT 1
    spring.datasource.hikari.validation-timeout=1000
    
    ### xxl-job, datasource
    spring.datasource.url=jdbc:mysql://mysql.default.svc:3306/xxl_job?useUnicode=true&characterEncoding=UTF-8&autoReconnect=true&serverTimezone=Asia/Shanghai
    spring.datasource.username=root
    spring.datasource.password=password
    spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
    
    ### xxl-job, email
    spring.mail.host=smtp.qq.com
    spring.mail.port=25
    spring.mail.username=xxx@qq.com
    spring.mail.from=xxx@qq.com
    spring.mail.password=xxx
    spring.mail.properties.mail.smtp.auth=true
    spring.mail.properties.mail.smtp.starttls.enable=true
    spring.mail.properties.mail.smtp.starttls.required=true
    spring.mail.properties.mail.smtp.socketFactory.class=javax.net.ssl.SSLSocketFactory
    
    ### xxl-job, access token
    xxl.job.accessToken=default_token
    
    ### xxl-job, access token
    xxl.job.timeout=3
    
    ### xxl-job, i18n (default is zh_CN, and you can choose "zh_CN", "zh_TC" and "en")
    xxl.job.i18n=zh_CN
    
    ## xxl-job, triggerpool max size
    xxl.job.triggerpool.fast.max=200
    xxl.job.triggerpool.slow.max=100
    
    ### xxl-job, log retention days
    xxl.job.logretentiondays=30
  logback.xml: |
    <?xml version="1.0" encoding="UTF-8"?>
    <configuration debug="false" scan="true" scanPeriod="1 seconds">
    
    <contextName>logback</contextName>
    <property name="log.path" value="./data/applogs/xxl-job/xxl-job-admin.log"/>
    
    <appender name="console" class="ch.qos.logback.core.ConsoleAppender">
    <encoder>
    <pattern>%d{HH:mm:ss.SSS} %contextName [%thread] %-5level %logger{36} - %msg%n</pattern>
    </encoder>
    </appender>
    
    <appender name="file" class="ch.qos.logback.core.rolling.RollingFileAppender">
    <file>${log.path}</file>
    <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
    <fileNamePattern>${log.path}.%d{yyyy-MM-dd}.zip</fileNamePattern>
    </rollingPolicy>
    <encoder>
    <pattern>%date %level [%thread] %logger{36} [%file : %line] %msg%n
      </pattern>
      </encoder>
      </appender>
      
      <root level="info">
      <appender-ref ref="console"/>
      <appender-ref ref="file"/>
      </root>
      
      </configuration>